
;;; generated by chicken-wrap from libxlsxwriter_layer.c

(begin
  (begin
    (define createWorkbook (foreign-lambda void "createWorkbook" c-string)))
  (begin (define formatsCleanup (foreign-lambda void "formatsCleanup")))
  (begin (define rowNumberCleanup (foreign-lambda void "rowNumberCleanup")))
  (begin (define colNumberCleanup (foreign-lambda void "colNumberCleanup")))
  (begin
    (define dataValidationListsCleanup
      (foreign-lambda void "dataValidationListsCleanup")))
  (begin
    (define dataValidationsCleanup
      (foreign-lambda void "dataValidationsCleanup")))
  (begin
    (define chartPointsCleanup (foreign-lambda void "chartPointsCleanup")))
  (begin (define chartFillsCleanup (foreign-lambda void "chartFillsCleanup")))
  (begin
    (define chartPatternsCleanup (foreign-lambda void "chartPatternsCleanup")))
  (begin (define chartLinesCleanup (foreign-lambda void "chartLinesCleanup")))
  (begin (define seriesCleanup (foreign-lambda void "seriesCleanup")))
  (begin (define chartsCleanup (foreign-lambda void "chartsCleanup")))
  (begin
    (define seriesErrorBarsCleanup
      (foreign-lambda void "seriesErrorBarsCleanup")))
  (begin (define chartFontsCleanup (foreign-lambda void "chartFontsCleanup")))
  (begin
    (define debugFormat
      (foreign-lambda void "debugFormat" (c-pointer "lxw_format"))))
  (begin (define debugFormats (foreign-lambda void "debugFormats")))
  (begin
    (define debugChartPattern
      (foreign-lambda
        void
        "debugChartPattern"
        (c-pointer "lxw_chart_pattern"))))
  (begin
    (define debugChartLine
      (foreign-lambda void "debugChartLine" (c-pointer "lxw_chart_line"))))
  (begin (define initFormats (foreign-lambda void "initFormats" "ptrdiff_t")))
  (begin
    (define initRowNumbers (foreign-lambda void "initRowNumbers" "ptrdiff_t")))
  (begin
    (define initColNumbers (foreign-lambda void "initColNumbers" "ptrdiff_t")))
  (begin
    (define initDataValidations
      (foreign-lambda void "initDataValidations" "ptrdiff_t")))
  (begin
    (define initChartFills (foreign-lambda void "initChartFills" "ptrdiff_t")))
  (begin
    (define initChartPoints
      (foreign-lambda void "initChartPoints" "ptrdiff_t")))
  (begin
    (define initChartLines (foreign-lambda void "initChartLines" "ptrdiff_t")))
  (begin
    (define initChartPatterns
      (foreign-lambda void "initChartPatterns" "ptrdiff_t")))
  (begin (define initSeries (foreign-lambda void "initSeries" "ptrdiff_t")))
  (begin (define initCharts (foreign-lambda void "initCharts" "ptrdiff_t")))
  (begin
    (define initChartFonts (foreign-lambda void "initChartFonts" "ptrdiff_t")))
  (begin
    (define createDataValidationList
      (foreign-lambda void "createDataValidationList" c-string)))
  (begin
    (define createChartPoint
      (foreign-lambda void "createChartPoint" "uint" double)))
  (begin
    (define createChartFill
      (foreign-lambda void "createChartFill" "int32_t" "uint8_t" "uint8_t")))
  (begin
    (define createChartLine
      (foreign-lambda
        void
        "createChartLine"
        "int32_t"
        "uint8_t"
        float
        "uint8_t")))
  (begin
    (define createChartPattern
      (foreign-lambda
        void
        "createChartPattern"
        "int32_t"
        "int32_t"
        "uint8_t")))
  (begin
    (define createChartFont
      (foreign-lambda
        void
        "createChartFont"
        c-string
        double
        "uint8_t"
        "uint8_t"
        "uint8_t"
        "uint8_t"
        "uint8_t"
        "uint8_t"
        "uint8_t"
        "int8_t")))
  (begin
    (define addToRowNumberList
      (foreign-lambda void "addToRowNumberList" "uint32_t")))
  (begin
    (define addToColNumberList
      (foreign-lambda void "addToColNumberList" unsigned-short)))
  (begin
    (define debugDataValidationList
      (foreign-lambda void "debugDataValidationList")))
  (begin
    (define debugDataValidation
      (foreign-lambda
        void
        "debugDataValidation"
        (c-pointer "lxw_data_validation"))))
  (begin
    (define debugDataValidations (foreign-lambda void "debugDataValidations")))
  (begin (define debugChartPoints (foreign-lambda void "debugChartPoints")))
  (begin
    (define debugChartFill
      (foreign-lambda void "debugChartFill" (c-pointer "lxw_chart_fill"))))
  (begin (define debugChartFills (foreign-lambda void "debugChartFills")))
  (begin (define debugChartLines (foreign-lambda void "debugChartLines")))
  (begin
    (define debugChartPatterns (foreign-lambda void "debugChartPatterns")))
  (begin
    (define setDataValidationIndex
      (foreign-lambda void "setDataValidationIndex" "ptrdiff_t")))
  (begin
    (define setChartPointIndex
      (foreign-lambda void "setChartPointIndex" "ptrdiff_t")))
  (begin
    (define setChartFillIndex
      (foreign-lambda void "setChartFillIndex" "ptrdiff_t")))
  (begin
    (define setChartLineIndex
      (foreign-lambda void "setChartLineIndex" "ptrdiff_t")))
  (begin
    (define setChartPatternIndex
      (foreign-lambda void "setChartPatternIndex" "ptrdiff_t")))
  (begin
    (define setFormatIndex (foreign-lambda void "setFormatIndex" "ptrdiff_t")))
  (begin
    (define setSeriesIndex (foreign-lambda void "setSeriesIndex" "ptrdiff_t")))
  (begin
    (define setChartIndex (foreign-lambda void "setChartIndex" "ptrdiff_t")))
  (begin
    (define setSeriesErrorBarsIndex
      (foreign-lambda void "setSeriesErrorBarsIndex" "ptrdiff_t")))
  (begin
    (define setChartFontIndex
      (foreign-lambda void "setChartFontIndex" "ptrdiff_t")))
  (begin (define addWorksheet (foreign-lambda void "addWorksheet" c-string)))
  (begin
    (define worksheetWriteString
      (foreign-lambda void "worksheetWriteString" c-string)))
  (begin
    (define worksheetWriteNumber
      (foreign-lambda void "worksheetWriteNumber" float)))
  (begin
    (define worksheetWriteFormula
      (foreign-lambda
        void
        "worksheetWriteFormula"
        c-string
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetWriteArrayFormula
      (foreign-lambda
        void
        "worksheetWriteArrayFormula"
        c-string
        "uint32_t"
        unsigned-short
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetWriteDatetime
      (foreign-lambda
        void
        "worksheetWriteDatetime"
        integer
        integer
        integer
        integer
        integer
        double
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetWriteURL
      (foreign-lambda
        void
        "worksheetWriteURL"
        c-string
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetWriteBoolean
      (foreign-lambda
        void
        "worksheetWriteBoolean"
        short
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetWriteBlank
      (foreign-lambda void "worksheetWriteBlank" "uint32_t" unsigned-short)))
  (begin
    (define worksheetSetRow
      (foreign-lambda void "worksheetSetRow" double "uint32_t")))
  (begin
    (define worksheetSetRowOpt
      (foreign-lambda
        void
        "worksheetSetRowOpt"
        unsigned-char
        unsigned-char
        unsigned-char
        double
        "uint32_t")))
  (begin
    (define worksheetSetColumn
      (foreign-lambda
        void
        "worksheetSetColumn"
        double
        unsigned-short
        unsigned-short)))
  (begin
    (define worksheetSetColumnOpt
      (foreign-lambda
        void
        "worksheetSetColumnOpt"
        unsigned-char
        unsigned-char
        unsigned-char
        double
        unsigned-short
        unsigned-short)))
  (begin
    (define worksheetInsertImage
      (foreign-lambda
        void
        "worksheetInsertImage"
        c-string
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetInsertImageOpt
      (foreign-lambda
        void
        "worksheetInsertImageOpt"
        integer
        integer
        double
        double
        c-string
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetInsertChart
      (foreign-lambda void "worksheetInsertChart" "uint32_t" unsigned-short)))
  (begin
    (define worksheetInsertChartOpt
      (foreign-lambda
        void
        "worksheetInsertChartOpt"
        integer
        integer
        integer
        integer
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetMergeRange
      (foreign-lambda
        void
        "worksheetMergeRange"
        c-string
        "uint32_t"
        unsigned-short
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetAutoFilter
      (foreign-lambda
        void
        "worksheetAutoFilter"
        "uint32_t"
        unsigned-short
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetDataValidationCell
      (foreign-lambda
        void
        "worksheetDataValidationCell"
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetDataValidationRange
      (foreign-lambda
        void
        "worksheetDataValidationRange"
        "uint32_t"
        unsigned-short
        "uint32_t"
        unsigned-short)))
  (begin (define worksheetActivate (foreign-lambda void "worksheetActivate")))
  (begin (define worksheetSelect (foreign-lambda void "worksheetSelect")))
  (begin (define worksheetHide (foreign-lambda void "worksheetHide")))
  (begin
    (define worksheetSetFirstSheet
      (foreign-lambda void "worksheetSetFirstSheet")))
  (begin
    (define worksheetSplitPanes
      (foreign-lambda void "worksheetSplitPanes" double double)))
  (begin
    (define worksheetSetSelection
      (foreign-lambda
        void
        "worksheetSetSelection"
        "uint32_t"
        unsigned-short
        "uint32_t"
        unsigned-short)))
  (begin
    (define worksheetSetLandscape
      (foreign-lambda void "worksheetSetLandscape")))
  (begin
    (define worksheetSetPortrait (foreign-lambda void "worksheetSetPortrait")))
  (begin
    (define worksheetSetPageView (foreign-lambda void "worksheetSetPageView")))
  (begin
    (define worksheetSetPaper
      (foreign-lambda void "worksheetSetPaper" unsigned-char)))
  (begin
    (define worksheetSetMargins
      (foreign-lambda void "worksheetSetMargins" double double double double)))
  (begin
    (define worksheetSetHeader
      (foreign-lambda void "worksheetSetHeader" c-string)))
  (begin
    (define worksheetSetFooter
      (foreign-lambda void "worksheetSetFooter" c-string)))
  (begin
    (define worksheetSetHeaderOpt
      (foreign-lambda void "worksheetSetHeaderOpt" c-string double)))
  (begin
    (define worksheetSetFooterOpt
      (foreign-lambda void "worksheetSetFooterOpt" c-string double)))
  (begin
    (define worksheetSetHPageBreaks
      (foreign-lambda void "worksheetSetHPageBreaks")))
  (begin
    (define worksheetSetVPageBreaks
      (foreign-lambda void "worksheetSetVPageBreaks")))
  (begin (define createFormat (foreign-lambda void "createFormat")))
  (begin
    (define setCellNumFormat
      (foreign-lambda void "setCellNumFormat" c-string)))
  (begin
    (define setCellNumFormatIndex
      (foreign-lambda void "setCellNumFormatIndex" "uint8_t")))
  (begin (define formatHideFormula (foreign-lambda void "formatHideFormula")))
  (begin (define formatSetUnlocked (foreign-lambda void "formatSetUnlocked")))
  (begin (define formatSetBold (foreign-lambda void "formatSetBold")))
  (begin (define formatSetItalic (foreign-lambda void "formatSetItalic")))
  (begin
    (define setUnderlineSingle (foreign-lambda void "setUnderlineSingle")))
  (begin
    (define setUnderlineDouble (foreign-lambda void "setUnderlineDouble")))
  (begin
    (define setUnderlineSingleAcct
      (foreign-lambda void "setUnderlineSingleAcct")))
  (begin
    (define setUnderlineDoubleAcct
      (foreign-lambda void "setUnderlineDoubleAcct")))
  (begin (define setStrikeout (foreign-lambda void "setStrikeout")))
  (begin (define setSuperscript (foreign-lambda void "setSuperscript")))
  (begin (define setSubscript (foreign-lambda void "setSubscript")))
  (begin (define setFontColor (foreign-lambda void "setFontColor" "uint32_t")))
  (begin (define setFontName (foreign-lambda void "setFontName" c-string)))
  (begin (define setRotation (foreign-lambda void "setRotation" integer)))
  (begin
    (define setIndentation (foreign-lambda void "setIndentation" integer)))
  (begin (define setBold (foreign-lambda void "setBold")))
  (begin (define setItalic (foreign-lambda void "setItalic")))
  (begin (define setShrink (foreign-lambda void "setShrink")))
  (begin (define setPattern (foreign-lambda void "setPattern" "uint8_t")))
  (begin (define setAlign (foreign-lambda void "setAlign" "uint8_t")))
  (begin (define setBorder (foreign-lambda void "setBorder" "uint8_t")))
  (begin
    (define setBorderBottom (foreign-lambda void "setBorderBottom" "uint8_t")))
  (begin (define setBorderTop (foreign-lambda void "setBorderTop" "uint8_t")))
  (begin
    (define setBorderLeft (foreign-lambda void "setBorderLeft" "uint8_t")))
  (begin
    (define setBorderRight (foreign-lambda void "setBorderRight" "uint8_t")))
  (begin (define setBGColor (foreign-lambda void "setBGColor" "uint32_t")))
  (begin (define setFGColor (foreign-lambda void "setFGColor" "uint32_t")))
  (begin
    (define setBorderColor (foreign-lambda void "setBorderColor" "uint32_t")))
  (begin
    (define setBorderBottomColor
      (foreign-lambda void "setBorderBottomColor" "uint32_t")))
  (begin
    (define setBorderTopColor
      (foreign-lambda void "setBorderTopColor" "uint32_t")))
  (begin
    (define setBorderLeftColor
      (foreign-lambda void "setBorderLeftColor" "uint32_t")))
  (begin
    (define setBorderRightColor
      (foreign-lambda void "setBorderRightColor" "uint32_t")))
  (begin (define turnOnTextWrap (foreign-lambda void "turnOnTextWrap")))
  (begin
    (define setDocProperties
      (foreign-lambda
        void
        "setDocProperties"
        c-string
        c-string
        c-string
        c-string
        c-string
        c-string
        c-string
        c-string
        c-string)))
  (begin
    (define workbookSetCustomPropertyString
      (foreign-lambda
        void
        "workbookSetCustomPropertyString"
        c-string
        c-string)))
  (begin
    (define workbookSetCustomPropertyNumber
      (foreign-lambda void "workbookSetCustomPropertyNumber" c-string double)))
  (begin
    (define workbookSetCustomPropertyBoolean
      (foreign-lambda
        void
        "workbookSetCustomPropertyBoolean"
        c-string
        unsigned-char)))
  (begin
    (define workbookSetCustomPropertyDatetime
      (foreign-lambda
        void
        "workbookSetCustomPropertyDatetime"
        c-string
        integer
        integer
        integer
        integer
        integer
        double)))
  (begin
    (define workbookDefineName
      (foreign-lambda void "workbookDefineName" c-string c-string)))
  (begin
    (define workbookGetWorksheetByName
      (foreign-lambda void "workbookGetWorksheetByName" c-string)))
  (begin
    (define workbookValidateWorksheetName
      (foreign-lambda void "workbookValidateWorksheetName" c-string)))
  (begin (define setCol (foreign-lambda void "setCol" unsigned-short)))
  (begin (define setRow (foreign-lambda void "setRow" "uint32_t")))
  (begin
    (define setPos (foreign-lambda void "setPos" "uint32_t" unsigned-short)))
  (begin
    (define createChart (foreign-lambda void "createChart" unsigned-short)))
  (begin
    (define createChartSeries
      (foreign-lambda void "createChartSeries" c-string c-string)))
  (begin
    (define chartSeriesSetName
      (foreign-lambda void "chartSeriesSetName" c-string)))
  (begin
    (define chartSeriesSetLine (foreign-lambda void "chartSeriesSetLine")))
  (begin
    (define chartSeriesSetFill
      (foreign-lambda void "chartSeriesSetFill" integer)))
  (begin
    (define chartSeriesSetPattern
      (foreign-lambda
        void
        "chartSeriesSetPattern"
        "uint8_t"
        "uint32_t"
        "uint32_t")))
  (begin
    (define chartSeriesSetMarkerType
      (foreign-lambda void "chartSeriesSetMarkerType" unsigned-char)))
  (begin
    (define chartSeriesSetMarkerSize
      (foreign-lambda void "chartSeriesSetMarkerSize" unsigned-char)))
  (begin
    (define chartSeriesSetMarkerLine
      (foreign-lambda void "chartSeriesSetMarkerLine")))
  (begin
    (define chartSeriesSetMarkerFill
      (foreign-lambda void "chartSeriesSetMarkerFill" "ptrdiff_t")))
  (begin
    (define chartSeriesSetMarkerPattern
      (foreign-lambda
        void
        "chartSeriesSetMarkerPattern"
        "uint8_t"
        "uint32_t"
        "uint32_t")))
  (begin
    (define chartSeriesInvertIfNegative
      (foreign-lambda void "chartSeriesInvertIfNegative")))
  (begin
    (define chartSeriesSetPoints (foreign-lambda void "chartSeriesSetPoints")))
  (begin
    (define chartSeriesSetSmooth
      (foreign-lambda void "chartSeriesSetSmooth" "uint8_t")))
  (begin
    (define chartSeriesSetLabels (foreign-lambda void "chartSeriesSetLabels")))
  (begin
    (define chartSeriesSetLabelsOpt
      (foreign-lambda
        void
        "chartSeriesSetLabelsOpt"
        "uint8_t"
        "uint8_t"
        "uint8_t")))
  (begin
    (define chartSeriesSetLabelsSeparator
      (foreign-lambda void "chartSeriesSetLabelsSeparator" "uint8_t")))
  (begin
    (define chartSeriesSetLabelsPosition
      (foreign-lambda void "chartSeriesSetLabelsPosition" "uint8_t")))
  (begin
    (define chartSeriesSetLabelsLeaderLine
      (foreign-lambda void "chartSeriesSetLabelsLeaderLine")))
  (begin
    (define chartSeriesSetLabelsLegend
      (foreign-lambda void "chartSeriesSetLabelsLegend")))
  (begin
    (define chartSeriesSetLabelsPercentage
      (foreign-lambda void "chartSeriesSetLabelsPercentage")))
  (begin
    (define chartSeriesSetLabelsNumFormat
      (foreign-lambda void "chartSeriesSetLabelsNumFormat" c-string)))
  (begin
    (define chartSeriesSetLabelsFont
      (foreign-lambda void "chartSeriesSetLabelsFont" c-string)))
  (begin
    (define chartSeriesSetTrendline
      (foreign-lambda void "chartSeriesSetTrendline" "uint8_t" "uint8_t")))
  (begin
    (define chartSeriesSetTrendlineForecast
      (foreign-lambda void "chartSeriesSetTrendlineForecast" double double)))
  (begin
    (define chartSeriesSetTrendlineEquation
      (foreign-lambda void "chartSeriesSetTrendlineEquation")))
  (begin
    (define chartSeriesSetTrendlineRSquared
      (foreign-lambda void "chartSeriesSetTrendlineRSquared")))
  (begin
    (define chartSeriesSetTrendlineIntercept
      (foreign-lambda void "chartSeriesSetTrendlineIntercept" double)))
  (begin
    (define chartSeriesSetTrendlineName
      (foreign-lambda void "chartSeriesSetTrendlineName" c-string)))
  (begin
    (define chartSeriesSetTrendlineLine
      (foreign-lambda void "chartSeriesSetTrendlineLine")))
  (begin
    (define chartSeriesGetErrorBars
      (foreign-lambda void "chartSeriesGetErrorBars" "uint8_t")))
  (begin
    (define chartSeriesSetErrorBars
      (foreign-lambda
        void
        "chartSeriesSetErrorBars"
        "uint8_t"
        double
        unsigned-short)))
  (begin
    (define chartSeriesSetErrorBarsDirection
      (foreign-lambda void "chartSeriesSetErrorBarsDirection" "uint8_t")))
  (begin
    (define chartSeriesSetErrorBarsEndCap
      (foreign-lambda void "chartSeriesSetErrorBarsEndCap" "uint8_t")))
  (begin
    (define chartSeriesSetErrorBarsLine
      (foreign-lambda void "chartSeriesSetErrorBarsLine")))
  (begin
    (define chartToggleMajorGridLinesXAxis
      (foreign-lambda void "chartToggleMajorGridLinesXAxis" unsigned-short)))
  (begin
    (define chartToggleMajorGridLinesYAxis
      (foreign-lambda void "chartToggleMajorGridLinesYAxis" unsigned-short)))
  (begin
    (define chartToggleMinorGridLinesXAxis
      (foreign-lambda void "chartToggleMinorGridLinesXAxis" unsigned-short)))
  (begin
    (define chartToggleMinorGridLinesYAxis
      (foreign-lambda void "chartToggleMinorGridLinesYAxis" unsigned-short)))
  (begin
    (define chartXAxisSetName
      (foreign-lambda void "chartXAxisSetName" c-string)))
  (begin
    (define chartYAxisSetName
      (foreign-lambda void "chartYAxisSetName" c-string)))
  (begin
    (define chartXAxisSetNameRange
      (foreign-lambda
        void
        "chartXAxisSetNameRange"
        c-string
        "uint32_t"
        unsigned-short)))
  (begin
    (define chartYAxisSetNameRange
      (foreign-lambda
        void
        "chartYAxisSetNameRange"
        c-string
        "uint32_t"
        unsigned-short)))
  (begin
    (define chartXAxisSetNameFont
      (foreign-lambda void "chartXAxisSetNameFont")))
  (begin
    (define chartYAxisSetNameFont
      (foreign-lambda void "chartYAxisSetNameFont")))
  (begin
    (define chartXAxisSetNumFont (foreign-lambda void "chartXAxisSetNumFont")))
  (begin
    (define chartYAxisSetNumFont (foreign-lambda void "chartYAxisSetNumFont")))
  (begin
    (define chartXAxisSetNumFormat
      (foreign-lambda void "chartXAxisSetNumFormat" c-string)))
  (begin
    (define chartYAxisSetNumFormat
      (foreign-lambda void "chartYAxisSetNumFormat" c-string)))
  (begin (define chartXAxisSetLine (foreign-lambda void "chartXAxisSetLine")))
  (begin (define chartYAxisSetLine (foreign-lambda void "chartYAxisSetLine")))
  (begin (define chartXAxisSetFill (foreign-lambda void "chartXAxisSetFill")))
  (begin (define chartYAxisSetFill (foreign-lambda void "chartYAxisSetFill")))
  (begin
    (define chartXAxisSetPattern (foreign-lambda void "chartXAxisSetPattern")))
  (begin
    (define chartYAxisSetPattern (foreign-lambda void "chartYAxisSetPattern")))
  (begin (define chartReverseXAxis (foreign-lambda void "chartReverseXAxis")))
  (begin (define chartReverseYAxis (foreign-lambda void "chartReverseYAxis")))
  (begin
    (define chartXAxisSetCrossing
      (foreign-lambda void "chartXAxisSetCrossing" double)))
  (begin
    (define chartYAxisSetCrossing
      (foreign-lambda void "chartYAxisSetCrossing" double)))
  (begin
    (define chartXAxisSetCrossingMax
      (foreign-lambda void "chartXAxisSetCrossingMax")))
  (begin
    (define chartYAxisSetCrossingMax
      (foreign-lambda void "chartYAxisSetCrossingMax")))
  (begin (define chartXAxisOff (foreign-lambda void "chartXAxisOff")))
  (begin (define chartYAxisOff (foreign-lambda void "chartYAxisOff")))
  (begin
    (define chartXAxisSetPosition
      (foreign-lambda void "chartXAxisSetPosition" "uint8_t")))
  (begin
    (define chartYAxisSetPosition
      (foreign-lambda void "chartYAxisSetPosition" "uint8_t")))
  (begin
    (define chartXAxisSetLabelPosition
      (foreign-lambda void "chartXAxisSetLabelPosition" "uint8_t")))
  (begin
    (define chartYAxisSetLabelPosition
      (foreign-lambda void "chartYAxisSetLabelPosition" "uint8_t")))
  (begin
    (define chartXAxisSetLabelAlign
      (foreign-lambda void "chartXAxisSetLabelAlign" "uint8_t")))
  (begin
    (define chartYAxisSetLabelAlign
      (foreign-lambda void "chartYAxisSetLabelAlign" "uint8_t")))
  (begin
    (define chartXAxisSetMin (foreign-lambda void "chartXAxisSetMin" double)))
  (begin
    (define chartXAxisSetMax (foreign-lambda void "chartXAxisSetMax" double)))
  (begin
    (define chartYAxisSetMin (foreign-lambda void "chartYAxisSetMin" double)))
  (begin
    (define chartYAxisSetMax (foreign-lambda void "chartYAxisSetMax" double)))
  (begin
    (define chartXAxisSetLogBase
      (foreign-lambda void "chartXAxisSetLogBase" "uint16_t")))
  (begin
    (define chartYAxisSetLogBase
      (foreign-lambda void "chartYAxisSetLogBase" "uint16_t")))
  (begin
    (define chartXAxisSetMajorTickPoint
      (foreign-lambda void "chartXAxisSetMajorTickPoint" "uint8_t")))
  (begin
    (define chartYAxisSetMajorTickPoint
      (foreign-lambda void "chartYAxisSetMajorTickPoint" "uint8_t")))
  (begin
    (define chartXAxisSetMinorTickPoint
      (foreign-lambda void "chartXAxisSetMinorTickPoint" "uint8_t")))
  (begin
    (define chartYAxisSetMinorTickPoint
      (foreign-lambda void "chartYAxisSetMinorTickPoint" "uint8_t")))
  (begin
    (define chartXAxisSetIntervalUnit
      (foreign-lambda void "chartXAxisSetIntervalUnit" "uint16_t")))
  (begin
    (define chartYAxisSetIntervalUnit
      (foreign-lambda void "chartYAxisSetIntervalUnit" "uint16_t")))
  (begin
    (define chartXAxisSetIntervalUnitTick
      (foreign-lambda void "chartXAxisSetIntervalUnitTick" "uint16_t")))
  (begin
    (define chartYAxisSetIntervalUnitTick
      (foreign-lambda void "chartYAxisSetIntervalUnitTick" "uint16_t")))
  (begin
    (define chartXAxisSetMajorUnit
      (foreign-lambda void "chartXAxisSetMajorUnit" double)))
  (begin
    (define chartYAxisSetMajorUnit
      (foreign-lambda void "chartYAxisSetMajorUnit" double)))
  (begin
    (define chartXAxisSetMinorUnit
      (foreign-lambda void "chartXAxisSetMinorUnit" double)))
  (begin
    (define chartYAxisSetMinorUnit
      (foreign-lambda void "chartYAxisSetMinorUnit" double)))
  (begin
    (define chartXAxisSetDisplayUnits
      (foreign-lambda void "chartXAxisSetDisplayUnits" "uint8_t")))
  (begin
    (define chartYAxisSetDisplayUnits
      (foreign-lambda void "chartYAxisSetDisplayUnits" "uint8_t")))
  (begin
    (define chartXAxisSetDisplayUnitsVisible
      (foreign-lambda void "chartXAxisSetDisplayUnitsVisible" "uint8_t")))
  (begin
    (define chartYAxisSetDisplayUnitsVisible
      (foreign-lambda void "chartYAxisSetDisplayUnitsVisible" "uint8_t")))
  (begin
    (define chartXAxisSetMajorGridlinesVisible
      (foreign-lambda void "chartXAxisSetMajorGridlinesVisible" "uint8_t")))
  (begin
    (define chartYAxisSetMajorGridlinesVisible
      (foreign-lambda void "chartYAxisSetMajorGridlinesVisible" "uint8_t")))
  (begin
    (define chartXAxisSetMinorGridlinesVisible
      (foreign-lambda void "chartXAxisSetMinorGridlinesVisible" "uint8_t")))
  (begin
    (define chartYAxisSetMinorGridlinesVisible
      (foreign-lambda void "chartYAxisSetMinorGridlinesVisible" "uint8_t")))
  (begin
    (define chartXAxisSetMajorGridlinesSetLine
      (foreign-lambda void "chartXAxisSetMajorGridlinesSetLine")))
  (begin
    (define chartYAxisSetMajorGridlinesSetLine
      (foreign-lambda void "chartYAxisSetMajorGridlinesSetLine")))
  (begin
    (define chartXAxisSetMinorGridlinesSetLine
      (foreign-lambda void "chartXAxisSetMinorGridlinesSetLine")))
  (begin
    (define chartYAxisSetMinorGridlinesSetLine
      (foreign-lambda void "chartYAxisSetMinorGridlinesSetLine")))
  (begin
    (define chartSeriesSetNameRange
      (foreign-lambda
        void
        "chartSeriesSetNameRange"
        c-string
        "uint32_t"
        unsigned-short)))
  (begin
    (define chartXAxisSetReverse (foreign-lambda void "chartXAxisSetReverse")))
  (begin
    (define chartYAxisSetReverse (foreign-lambda void "chartYAxisSetReverse")))
  (begin
    (define chartXAxisSetCrossingOff
      (foreign-lambda void "chartXAxisSetCrossingOff")))
  (begin
    (define chartYAxisSetCrossingOff
      (foreign-lambda void "chartYAxisSetCrossingOff")))
  (begin (define closeWorkbook (foreign-lambda void "closeWorkbook"))))
